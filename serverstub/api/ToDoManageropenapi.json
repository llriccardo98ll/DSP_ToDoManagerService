{
  "openapi": "3.0.1",
  "info": {
    "title": "Swagger Petstore",
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://petstore.swagger.io/v2"
    },
    {
      "url": "http://petstore.swagger.io/v2"
    }
  ],
  "tags": [
    {
      "name": "task",
      "description": "Everything about Tasks",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/users/{idUser}/tasks": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Add a new task",
        "operationId": "addTask",
        "parameters": [{
          "name": "idUser",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/users/{idUser}/tasks/{idTask}": {
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Assigned to user a task",
        "description": "",
        "operationId": "",
        "parameters": [{
          "name": "idUser",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "idTask",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "assignment",
          "in": "query",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": [
          "task"
        ],
        "summary": "get a task of a user",
        "description": "",
        "operationId": "",
        "parameters": [{
          "name": "idUser",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "idTask",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        }
      }
    },
    "/users/{idUser}/tasks/{idTask}/created": {
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Mark as completed a task",
        "description": "",
        "operationId": "",
        "parameters": [{
          "name": "idUser",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "idTask",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/users/{idUser}/tasks/{idTask}/assignment": {
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Assign a task from idUser to another user",
        "description": "",
        "operationId": "",
        "parameters": [{
          "name": "idUser",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "idTask",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/users/{idUser}/tasks/{idTask}/visibility": {
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Change its visibility from public to private and vice versa",
        "description": "",
        "operationId": "",
        "parameters": [{
          "name": "idUser",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "idTask",
          "in": "path",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {}
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
            "id": {
                "type": "integer"
            },
            "name": {
                "type": "string"
            },
            "email": {
                "type": "string",
                "format": "email"
            },
            "password": {
                "type": "string",
                "minLength": 6,
                "maxLength": 20
            }
        },
        "required": [
            "id",
            "email",
            "password"
        ]
    },
    "task": {
      "type": "object",
      "properties": {
          "id": {
              "type": "integer",
              "uniquess": true,
              "minimum": 1
          },
          "definition": {
              "type": "string",
              "maxLength": 160
          },
          "important": {
              "type": "boolean",
              "default": false
          },
          "private": {
              "type": "boolean",
              "default": true
          },
          "projects": {
              "enum": [
                  "Personal",
                  "WA1_Project",
                  "WA2_Project",
                  "DPS_Project"
              ]
          },
          "deadline": {
              "type": "string",
              "pattern": "202[0-9]-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])"
          },
          "completed": {
              "type": "boolean",
              "default": false
          },
          "owner": {
              "$ref": "#components/schema/User.json"
          },
          "assignedTo": {
              "type": "array",
              "items": {
                  "$ref": "#components/schema/Task.json"
              }
          }
      },
      "required": [
          "id",
          "definition"
      ]
  }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}